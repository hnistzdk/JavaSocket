package JavaWeb;

import java.io.*;
import java.net.ServerSocket;
import java.net.Socket;

/**
 * @Description
 * @Author zdk
 * @Date 2020/10/28 19:33
 *
 * Socket通信的服务器端程序
 */
public class MyServer implements Runnable {

    ServerSocket server = null;
    Socket clientSocket=null;//负责当前线程中C/S通信中的Socket对象
    boolean notEnd = true;//标记是否结束
    Thread connThread;//向客户端发送信息的线程
    BufferedReader sin;//输入流对象
    DataOutputStream sout;//输出流对象,DataOutputStream流有比OutputStream更好的输出方式
    public static void main(String[] args) {
        MyServer MS=new MyServer();
        MS.serverStart();
    }

    public void serverStart()
    {
        try {
            server = new ServerSocket(8080);//建立监听服务
            System.out.println("端口号是：" + server.getLocalPort());
            while (notEnd) {
                clientSocket = server.accept();
                System.out.println("连接已建立");
                InputStream is = clientSocket.getInputStream();
                sin = new BufferedReader(new InputStreamReader(is));
                OutputStream os = clientSocket.getOutputStream();
                sout = new DataOutputStream(os);
                Thread connThread = new Thread(this);
                connThread.start();//启动线程,向客户端发送信息
                String aLine;
                while ((aLine = sin.readLine()) != null) //从客户端读入信息
                {
                    System.out.println(aLine);
                    if (aLine.equals("bye")) {
                        notEnd = false;
                        connThread.interrupt();//线程中断
                        break;
                    }
                }
                sout.close();//关闭所有流
                os.close();
                sin.close();
                is.close();
                clientSocket.close();//关闭Socket连接
                System.exit(0);//程序结束
            }

        } catch (Exception e) {
            System.out.println(e);
        }
    }
    public void run ()
    {
        while (true) {
            try {
                int ch;
                while ((ch = System.in.read()) != -1)
                {                           //从键盘接受数据并向客户端发送
                    sout.write((byte)ch);
                    if(ch!='\n')
                        sout.flush();
                }
            } catch (Exception e1) {
                System.out.println(e1);
            }
        }
    }
}
